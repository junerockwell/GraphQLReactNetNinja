{"ast":null,"code":"var _jsxFileName = \"/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/AddBook.js\";\nimport React, { Component } from 'react'; //npm install apollo-boost react-apollo graphql --save\n\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery } from '../queries/queries';\n\nclass AddBook extends Component {\n  displayAuthors() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Loading authors...\");\n    } else {\n      return data.authors.map(author => {\n        return React.createElement(\"option\", {\n          key: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-book\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Book name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Genre:\"), React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Author:\"), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Select author\"), this.displayAuthors())), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Add Book +\"));\n  }\n\n}\n\nexport default graphql(getAuthorsQuery)(AddBook);","map":{"version":3,"sources":["/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/AddBook.js"],"names":["React","Component","graphql","getAuthorsQuery","AddBook","displayAuthors","data","props","loading","authors","map","author","id","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,cAAc,GAAG;AACf,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AAEA,QAAIA,IAAI,CAACE,OAAT,EAAkB;AAChB,aAAQ;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAR;AACD,KAFD,MAEO;AACL,aAAOF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,MAAM,IAAI;AAChC,eACG;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BD,MAAM,CAACE,IAAjC,CADH;AAGD,OAJM,CAAP;AAKD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAWE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEI,KAAKT,cAAL,EAFJ,CAFF,CAXF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF,CADF;AAuBD;;AAtC6B;;AAyChC,eAAeH,OAAO,CAACC,eAAD,CAAP,CAAyBC,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\n//npm install apollo-boost react-apollo graphql --save\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery } from '../queries/queries';\n\nclass AddBook extends Component {\n  displayAuthors() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return (<option disabled>Loading authors...</option>);\n    } else {\n      return data.authors.map(author => {\n        return (\n           <option key={author.id}>{ author.name }</option>\n        )\n      });\n    }\n  }\n  render() {\n    return (\n      <form id=\"add-book\">\n        <div className=\"field\">\n          <label>Book name:</label>\n          <input type=\"text\" />\n        </div>\n\n        <div className=\"field\">\n          <label>Genre:</label>\n          <input type=\"text\" />\n        </div>\n\n        <div className=\"field\">\n          <label>Author:</label>\n          <select>\n            <option>Select author</option>\n            { this.displayAuthors() }\n          </select>\n        </div>\n\n        <button>Add Book +</button>\n      </form>\n    );\n  }\n}\n\nexport default graphql(getAuthorsQuery)(AddBook);\n"]},"metadata":{},"sourceType":"module"}