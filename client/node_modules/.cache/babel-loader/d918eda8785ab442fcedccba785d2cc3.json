{"ast":null,"code":"var _jsxFileName = \"/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/AddBook.js\";\nimport React, { Component } from 'react'; //npm install apollo-boost react-apollo graphql --save\n\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries/queries';\nimport flowright from 'lodash.flowright';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    };\n  }\n\n  displayAuthors() {\n    var data = this.props.getAuthorsQuery; // console.log(\"xx\", this.props);\n\n    if (data.loading) {\n      return React.createElement(\"option\", {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Loading authors...\");\n    } else {\n      return data.authors.map(author => {\n        return React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.addBookMutation({\n      variables: {\n        name: this.state.name,\n        genre: this.state.genre,\n        authorId: this.state.authorId\n      },\n      refetchQueries: [{\n        query: getBooksQuery\n      }]\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Book name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Genre:\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        genre: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Author:\"), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        authorId: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Select author\"), this.displayAuthors())), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n}\n\nexport default flowright(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/AddBook.js"],"names":["React","Component","graphql","getAuthorsQuery","addBookMutation","getBooksQuery","flowright","AddBook","constructor","props","state","name","genre","authorId","displayAuthors","data","loading","authors","map","author","id","submitForm","e","preventDefault","console","log","variables","refetchQueries","query","render","bind","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//npm install apollo-boost react-apollo graphql --save\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries/queries';\nimport flowright from 'lodash.flowright';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: '',\n    };\n  }\n  displayAuthors() {\n    var data = this.props.getAuthorsQuery;\n    // console.log(\"xx\", this.props);\n    \n    if (data.loading) {\n      return (<option disabled>Loading authors...</option>);\n    } else {\n      return data.authors.map(author => {\n        return (\n           <option key={author.id} value={author.id}>{ author.name }</option>\n        )\n      });\n    }\n  }\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.addBookMutation({\n      variables: {\n        name: this.state.name,\n        genre: this.state.genre,\n        authorId: this.state.authorId,\n      }, \n      refetchQueries: [{ query: getBooksQuery }]\n    });\n\n  }\n  render() {\n    return (\n      <form id=\"add-book\" onSubmit={this.submitForm.bind(this)}>\n        <div className=\"field\">\n          <label>Book name:</label>\n          <input type=\"text\" onChange={ (e) => this.setState({name: e.target.value}) }/>\n        </div>\n\n        <div className=\"field\">\n          <label>Genre:</label>\n          <input type=\"text\" onChange={ (e) => this.setState({genre: e.target.value}) }/>\n        </div>\n\n        <div className=\"field\">\n          <label>Author:</label>\n          <select onChange={ (e) => this.setState({authorId: e.target.value}) }>\n            <option>Select author</option>\n            { this.displayAuthors() }\n          </select>\n        </div>\n\n        <button>+</button>\n      </form>\n    );\n  }\n}\n\nexport default flowright(\n  graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\n  graphql(addBookMutation, { name: \"addBookMutation\" }),\n)(AddBook);\n"]},"metadata":{},"sourceType":"module"}