{"ast":null,"code":"var _jsxFileName = \"/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/BookDetails.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getOneBookQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n  submitForm(e) {\n    e.preventDefault();\n  }\n\n  displayBookDetails() {\n    const {\n      book\n    } = this.props.data;\n\n    if (book) {\n      return (// <div>\n        // \t<h2>{ book.name }</h2>\n        // \t<p>{ book.genre }</p>\n        // \t<p>{ book.author.name }</p>\n        // \t<p>All books by this author:</p>\n        // \t<ul className=\"other-books\">\n        // \t\t{ book.author.books.map(item => {\n        // \t\t\treturn <li key={item.id}>{item.name}</li>\n        // \t\t})}\n        // \t</ul>\n        // </div>\n        React.createElement(\"form\", {\n          id: \"update-book\",\n          onSubmit: this.submitForm.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Book name:\"), React.createElement(\"input\", {\n          type: \"text\",\n          value: book.name,\n          onChange: e => this.setState({\n            name: e.target.value\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Genre:\"), React.createElement(\"select\", {\n          onChange: e => this.setState({\n            genreId: e.target.value\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Select Genre\"), this.displayGenre())), React.createElement(\"div\", {\n          className: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Author:\"), React.createElement(\"select\", {\n          onChange: e => this.setState({\n            authorId: e.target.value\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Select author\"), this.displayAuthors())), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Update\"))\n      );\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"No book selected\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"book-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.displayBookDetails());\n  }\n\n}\n\nexport default graphql(getOneBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/BookDetails.js"],"names":["React","Component","graphql","getOneBookQuery","BookDetails","submitForm","e","preventDefault","displayBookDetails","book","props","data","bind","name","setState","target","value","genreId","displayGenre","authorId","displayAuthors","render","options","variables","id","bookId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,UAAU,CAACC,CAAD,EAAI;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA;;AACDC,EAAAA,kBAAkB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAL,CAAWC,IAA5B;;AACA,QAAIF,IAAJ,EAAU;AAET,aACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgBO,IAAhB,CAAqB,IAArB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADP,EAEO;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEH,IAAI,CAACI,IAA/B;AAAqC,UAAA,QAAQ,EAAIP,CAAD,IAAO,KAAKQ,QAAL,CAAc;AAACD,YAAAA,IAAI,EAAEP,CAAC,CAACS,MAAF,CAASC;AAAhB,WAAd,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFP,CADD,EAMK;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,EAEG;AAAQ,UAAA,QAAQ,EAAIV,CAAD,IAAO,KAAKQ,QAAL,CAAc;AAACG,YAAAA,OAAO,EAAEX,CAAC,CAACS,MAAF,CAASC;AAAnB,WAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEI,KAAKE,YAAL,EAFJ,CAFH,CANL,EAcK;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,EAEG;AAAQ,UAAA,QAAQ,EAAIZ,CAAD,IAAO,KAAKQ,QAAL,CAAc;AAACK,YAAAA,QAAQ,EAAEb,CAAC,CAACS,MAAF,CAASC;AAApB,WAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEI,KAAKI,cAAL,EAFJ,CAFH,CAdL,EAsBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBL;AAZD;AAqCA,KAvCD,MAuCO;AACN,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD;AAGA;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACC;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKb,kBAAL,EADF,CADD;AAKD;;AAzDgC;;AA4DpC,eAAeN,OAAO,CAACC,eAAD,EAAkB;AACvCmB,EAAAA,OAAO,EAAGZ,KAAD,IAAW;AACnB,WAAO;AACNa,MAAAA,SAAS,EAAE;AACVC,QAAAA,EAAE,EAAEd,KAAK,CAACe;AADA;AADL,KAAP;AAKA;AAPsC,CAAlB,CAAP,CAQZrB,WARY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getOneBookQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n\tsubmitForm(e) {\n\t\te.preventDefault();\n\t}\n\tdisplayBookDetails() {\n\t  \tconst { book } = this.props.data;\n\t  \tif (book) {\n\n\t  \t\treturn (\n\t  \t\t\t// <div>\n\t  \t\t\t// \t<h2>{ book.name }</h2>\n\t  \t\t\t// \t<p>{ book.genre }</p>\n\t  \t\t\t// \t<p>{ book.author.name }</p>\n\t  \t\t\t// \t<p>All books by this author:</p>\n\t  \t\t\t// \t<ul className=\"other-books\">\n\t  \t\t\t// \t\t{ book.author.books.map(item => {\n\t  \t\t\t// \t\t\treturn <li key={item.id}>{item.name}</li>\n\t  \t\t\t// \t\t})}\n\t  \t\t\t// \t</ul>\n\t  \t\t\t// </div>\n\t  \t\t\t<form id=\"update-book\" onSubmit={this.submitForm.bind(this)}>\n\t  \t\t\t\t<div className=\"field\">\n\t\t\t          \t<label>Book name:</label>\n\t\t\t          \t<input type=\"text\" value={book.name} onChange={ (e) => this.setState({name: e.target.value}) }/>\n\t\t\t        </div>\n\n\t\t\t        <div className=\"field\">\n\t\t          \t\t<label>Genre:</label>\n\t\t          \t\t<select onChange={ (e) => this.setState({genreId: e.target.value}) }>\n\t\t            \t\t<option>Select Genre</option>\n\t\t            \t\t{ this.displayGenre() }\n\t\t          \t\t</select>\n\t\t        \t</div>\n\n\t\t        \t<div className=\"field\">\n\t\t          \t\t<label>Author:</label>\n\t\t          \t\t<select onChange={ (e) => this.setState({authorId: e.target.value}) }>\n\t\t            \t\t<option>Select author</option>\n\t\t            \t\t{ this.displayAuthors() }\n\t\t          \t\t</select>\n\t\t        \t</div>\n\n\t\t        \t<button>Update</button>\n\t  \t\t\t</form>\n\t  \t\t)\n\t  \t} else {\n\t  \t\treturn (\n\t  \t\t\t<div>No book selected</div>\n\t  \t\t)\n\t  \t}\n\t}\n\trender() {\n    \treturn (\n    \t\t<div id=\"book-details\">\n    \t\t{ this.displayBookDetails() }\n    \t\t</div>\n    \t);\n  \t}\n}\n\nexport default graphql(getOneBookQuery, {\n\toptions: (props) => {\n\t\treturn {\n\t\t\tvariables: {\n\t\t\t\tid: props.bookId\n\t\t\t}\n\t\t}\n\t}\n})(BookDetails);"]},"metadata":{},"sourceType":"module"}