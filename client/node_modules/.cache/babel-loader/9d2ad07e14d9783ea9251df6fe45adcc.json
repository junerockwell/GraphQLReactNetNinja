{"ast":null,"code":"var _jsxFileName = \"/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/BookDetails.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getOneBookQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n  displayBook() {\n    var data = this.props.data;\n    console.log(\"lsl \", data); // if (data.loading) {\n    // \treturn (<div>Loading books</div>);\n    // } else {\n    // \treturn data.books.map(book => {\n    // \t\treturn (\n    // \t\t   <li key={book.id}>{ book.name } - { book.genre } BY { book.author.name }</li>\n    // \t\t)\n    // \t});\n    // }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"book-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.displayBook());\n  }\n\n}\n\nexport default graphql(getOneBookQuery)(BookDetails);","map":{"version":3,"sources":["/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/BookDetails.js"],"names":["React","Component","graphql","getOneBookQuery","BookDetails","displayBook","data","props","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,WAAW,GAAG;AACX,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB,EAFW,CAGX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACHI,EAAAA,MAAM,GAAG;AACL,WACC;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKL,WAAL,EADF,CADD;AAKD;;AApBgC;;AAuBpC,eAAeH,OAAO,CAACC,eAAD,CAAP,CAAyBC,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getOneBookQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n\tdisplayBook() {\n\t  \tvar data = this.props.data;\n\t  \tconsole.log(\"lsl \", data)\n\t  \t// if (data.loading) {\n\t  \t// \treturn (<div>Loading books</div>);\n\t  \t// } else {\n\t  \t// \treturn data.books.map(book => {\n\t  \t// \t\treturn (\n\t  \t// \t\t   <li key={book.id}>{ book.name } - { book.genre } BY { book.author.name }</li>\n\t  \t// \t\t)\n\t  \t// \t});\n\t  \t// }\n\t  }\n\trender() {\n    \treturn (\n    \t\t<div id=\"book-details\">\n    \t\t{ this.displayBook() }\n    \t\t</div>\n    \t);\n  \t}\n}\n\nexport default graphql(getOneBookQuery)(BookDetails);"]},"metadata":{},"sourceType":"module"}