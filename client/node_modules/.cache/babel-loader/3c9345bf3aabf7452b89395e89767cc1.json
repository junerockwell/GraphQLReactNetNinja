{"ast":null,"code":"var _jsxFileName = \"/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/BookList.js\";\nimport React, { Component } from 'react'; //npm install apollo-boost react-apollo graphql --save\n\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst getBooksQuery = gql`\n\t{\n\t\tbooks {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`;\n\nclass BookList extends Component {\n  displayBooks() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Loading books\");\n    } else {\n      return data.books.map(book => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, book.name);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"book-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.displayBooks()));\n  }\n\n} // binding tthe query to the BookList component\n\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/BookList.js"],"names":["React","Component","gql","graphql","getBooksQuery","BookList","displayBooks","data","props","loading","books","map","book","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,aAAa,GAAGF,GAAI;;;;;;;CAA1B;;AASA,MAAMG,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,YAAY,GAAG;AACd,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,QAAIA,IAAI,CAACE,OAAT,EAAkB;AACjB,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAR;AACA,KAFD,MAEO;AACN,aAAOF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC7B,eACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,IAAI,CAACC,IAAX,CADH;AAGA,OAJM,CAAP;AAKA;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,YAAL,EADH,CADF,CADF;AAOD;;AArB8B,C,CAuBjC;;;AACA,eAAeH,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\n//npm install apollo-boost react-apollo graphql --save\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\n\nconst getBooksQuery = gql`\n\t{\n\t\tbooks {\n\t\t\tname\n\t\t\tid\n\t\t}\n\t}\n`\n\nclass BookList extends Component {\n  displayBooks() {\n  \tvar data = this.props.data;\n  \tif (data.loading) {\n  \t\treturn (<div>Loading books</div>);\n  \t} else {\n  \t\treturn data.books.map(book => {\n  \t\t\treturn (\n  \t\t\t   <li>{ book.name }</li>\n  \t\t\t)\n  \t\t});\n  \t}\n  }\n  render() {\n    return (\n      <div>\n        <ul id=\"book-list\">\n        \t{ this.displayBooks() }\n        </ul>\n      </div>\n    );\n  }\n}\n// binding tthe query to the BookList component\nexport default graphql(getBooksQuery)(BookList);\n"]},"metadata":{},"sourceType":"module"}