{"ast":null,"code":"var _jsxFileName = \"/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/AddBook.js\";\nimport React, { Component } from 'react'; //npm install apollo-boost react-apollo graphql --save\n\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\nimport flowright from 'lodash.flowright';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    };\n  }\n\n  displayAuthors() {\n    var data = this.props.data;\n    console.log(this.progs);\n    return data; // if (data.loading) {\n    //   return (<option disabled>Loading authors...</option>);\n    // } else {\n    //   return data.authors.map(author => {\n    //     return (\n    //        <option key={author.id} value={author.id}>{ author.name }</option>\n    //     )\n    //   });\n    // }\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"add-book\",\n      onSubmit: this.submitForm.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Book name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Genre:\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        genre: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Author:\"), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        authorId: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Select author\"), this.displayAuthors())), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Add Book +\"));\n  }\n\n}\n\nexport default flowright(graphql(getAuthorsQuery, {\n  name: \"getAuthorsQuery\"\n}), graphql(addBookMutation, {\n  name: \"addBookMutation\"\n}))(AddBook);","map":{"version":3,"sources":["/Users/junerockwell/Documents/GraphQLReactNetNinja/client/src/components/AddBook.js"],"names":["React","Component","graphql","getAuthorsQuery","addBookMutation","flowright","AddBook","constructor","props","state","name","genre","authorId","displayAuthors","data","console","log","progs","submitForm","e","preventDefault","render","bind","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,oBAAjD;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AACDC,EAAAA,cAAc,GAAG;AACf,QAAIC,IAAI,GAAG,KAAKN,KAAL,CAAWM,IAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAOH,IAAP,CAHe,CAIf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDI,EAAAA,UAAU,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AAED;;AACDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBI,IAAhB,CAAqB,IAArB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAIH,CAAD,IAAO,KAAKI,QAAL,CAAc;AAACb,QAAAA,IAAI,EAAES,CAAC,CAACK,MAAF,CAASC;AAAhB,OAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAIN,CAAD,IAAO,KAAKI,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAEQ,CAAC,CAACK,MAAF,CAASC;AAAjB,OAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAWE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,MAAA,QAAQ,EAAIN,CAAD,IAAO,KAAKI,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAAEO,CAAC,CAACK,MAAF,CAASC;AAApB,OAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEI,KAAKZ,cAAL,EAFJ,CAFF,CAXF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF,CADF;AAuBD;;AApD6B;;AAuDhC,eAAeR,SAAS,CACtBH,OAAO,CAACC,eAAD,EAAkB;AAAEO,EAAAA,IAAI,EAAE;AAAR,CAAlB,CADe,EAEtBR,OAAO,CAACE,eAAD,EAAkB;AAAEM,EAAAA,IAAI,EAAE;AAAR,CAAlB,CAFe,CAAT,CAGbJ,OAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\n//npm install apollo-boost react-apollo graphql --save\nimport { graphql } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\nimport flowright from 'lodash.flowright';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: '',\n    };\n  }\n  displayAuthors() {\n    var data = this.props.data;\n    console.log(this.progs)\n    return data;\n    // if (data.loading) {\n    //   return (<option disabled>Loading authors...</option>);\n    // } else {\n    //   return data.authors.map(author => {\n    //     return (\n    //        <option key={author.id} value={author.id}>{ author.name }</option>\n    //     )\n    //   });\n    // }\n  }\n  submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n\n  }\n  render() {\n    return (\n      <form id=\"add-book\" onSubmit={this.submitForm.bind(this)}>\n        <div className=\"field\">\n          <label>Book name:</label>\n          <input type=\"text\" onChange={ (e) => this.setState({name: e.target.value}) }/>\n        </div>\n\n        <div className=\"field\">\n          <label>Genre:</label>\n          <input type=\"text\" onChange={ (e) => this.setState({genre: e.target.value}) }/>\n        </div>\n\n        <div className=\"field\">\n          <label>Author:</label>\n          <select onChange={ (e) => this.setState({authorId: e.target.value}) }>\n            <option>Select author</option>\n            { this.displayAuthors() }\n          </select>\n        </div>\n\n        <button>Add Book +</button>\n      </form>\n    );\n  }\n}\n\nexport default flowright(\n  graphql(getAuthorsQuery, { name: \"getAuthorsQuery\" }),\n  graphql(addBookMutation, { name: \"addBookMutation\" }),\n)(AddBook);\n"]},"metadata":{},"sourceType":"module"}